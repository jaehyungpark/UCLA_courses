using lnxsrv07.seasnet.ucla.edu
===================================================
Exercise 1.1:
1. e m a c s SPACE e x e r 1 . h t m l
2. C-s U T F - 8 ENTER
3. C-s I n s t r u c t i o n s ENTER C-n
4. ESC < C-s H T M L ENTER C-f
5. ESC < C-s a r r o w M-b
6. C-e
7. C-a
8. ESC < or M-<
9. I used with and without arrows for testing
10. I already used fewer keystrokes that is available
11. C-x C-c
===================================================
Exercise 1.2:
1. e m a c s SPACE e x e r 2 . h t m l
2. C-s ! - - C-a C-k p
3. C-s ! - - SPACE D E L E T E M E C-a C-k
4. using C-s, I found two wikipedia addresses
   the first one was not commented out and was inside
   <li></li> bracket, so I left this and deleted the
   other commented out wikipedia address that matches
   C-s h t t p : / / e n . w i k i p e d i a . o r g
   / w i k i / H T M L _ c o m m e n t # C o m m e n
   t s C-s C-a C-p C-k C-n C-k C-n C-k
5. C-s ! - - - - M-b M-f C-u 7 C-d
   this successfully deletes the comment <!---->
===================================================
Exercise 1.3:
1. e m a c s SPACE e x e r 3 . h t m l
2. M-% A s s i g n m e n t s SPACE 1 ENTER
   A s s i g n m e n t s SPACE 3 7 ENTER y p y n
3. M-% U T F - 8 ENTER U S - A S C I I ENTER y n n
4. C-s < o l > ENTER ENTER p
5. diff SPACE -u SPACE e x e r 1 . h t m l SPACE
   e x e r 3 . h t m l SPACE > e x e r 3 . d i f f
===================================================
Exercise 1.4:
1. executed the given command to create file exer4.html
2. e m a c s SPACE e x e r 4 . h t m l 
3. M-x linum-mode (enabled line numbers)
   ESC > M-g g 3 9 2 ENTER C-e C-b C-b C-b C-b C-b C-b C-b C-b C-b C-b
   C-b C-b C-SP C-e C-b C-b C-b C-b C-b M-w ESC < C-s l o g SPACE l i n e s
   ENTER C-y
4. ESC > M-g g 3 7 9 ENTER C-e C-f C-SP C-e C-n C-n M-w ESC < C-s
   S u b m i t < / h 2 > C-n C-n C-y
   ESC > M-g g 3 7 0 ENTER C-f C-SP C-e M-w ESC < C-s E m a c s < / 
   h w 2 > ENTER C-n C-n C-y p
   ESC > M-g g 3 6 1 ENTER C-f C-SP C-e M-w ESC < C-s M-g g 1 8 ENTER
   C-y 
5. ESC > M-g g 3 5 5 ENTER C-SP M-> BS
6. C-/
7. ESC > M-g g 3 5 5 ENTER < ! - - ENTER ESC > - - >
8. C-s < o l > C-s C-s C-s C-s C-s C-s
   total 7 instances
   M-x r e p l a c e - s t r i n g ENTER < o l > ENTER < 0 l > ENTER
9. running the given shell command, the only differences I see is the
   changes from <ol> to <0l> and the HTML comment
===================================================
Exercise 1.5:
1. M-! mkdir ~/junk
2. C-x d ~/junk ENTER
   C-x b hello.c C-x C-w ENTER
   type in given c code and save C-x C-s ENTER
3. M-x c o m p i l e ENTER BS BS BS BS BS BS BS BS (to remove make -k)
   g c c SPACE - o SPACE h e l l o SPACE h e l l o . c ENTER
4. M-x compile ENTER BS BS BS BS BS BS BS BS . / h e l l o ENTER
   C-x b * c o m p i l a t i o n * ENTER C-x C-s h e l l o - o u t
   ENTER 
5. continuing from step 4, C-SP M-> M-x a p p e n d - t o - f i l e ENTER
   BS BS BS BS BS C S 3 5 L / k e y 1 . t x t
   I created a different directory named 'CS35L' and saved both key1 and
   ans1 files in this folder.
   After finishing part 1.5, I created another copy for both key1 and ans1
   in junk directory
   *Also, I finished this part after doing 1.6, so the output is appended
   at the end.
===================================================
Exercise 1.6:
1. C-x b ENTER
2. ( r a n d o m ) C-j
3. ( s e t q SPACE x SPACE ( r a n d o m ) ) C-j
   ( s e t q SPACE y SPACE ( r a n d o m ) ) C-j
   ( s e t q SPACE z SPACE ( r a n d o m ) ) C-j
4. ( * SPACE x SPACE y SPACE z)
5. M-: ( * SPACE x SPACE y SPACE z)
   I get the same output as #4.
6. no, the outputs are not truely integer numbers
   the computer follows the same algorithm to generate random numbers
   it starts with a common 'seed' number and then follows
   the algorithm pattern, since it is ruled by a recursive algorithm,
   the produced numbers are not truly random, this is called
   'pseudo-random' numbers.

-*- mode: compilation; default-directory: "~/CS35L/" -*-
Compilation started at Sat Apr  2 18:44:39

./hello
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  
  
  // for the output line below, I rearranged the length to fit within 80 lines
  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  
  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, 
  q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Sat Apr  2 18:44:39
